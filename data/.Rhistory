learning_data <- read.csv('C:/Users/Zafar/Documents/GitHub/IODS-project/data/learning2014.csv', sep=",")
head(learning_data)
#structure and dimensions of the data
str(learning_data)
dim(learning_data)
library(ggplot2)
#Trying to find out the correaltion between different variables.
pairs(learning_data)
# creating a plot and trying to find the dependencies of points and attitude
#There is a linear relationship between these two attributes.
plot1 <- ggplot(learning_data, aes(x = attitude, y = Points, col=gender))
plot1 <- plot1 + geom_point()
plot1
plot2 <- ggplot(learning_data, aes(attitude, deep, col = gender))
plot2 <- plot2 + geom_point()
plot2
summary(learning_data$attitude)
summary(learning_data$deep)
#Shows the relationship between attitude and age parameters. The results can also been seen from the summary of both variables.
plot3 <- ggplot(learning_data, aes(x = Age, y = stra, col = gender))
plot3 <- plot3 + geom_point()
plot3
summary(learning_data$Points)
summary(learning_data$stra)
summary(learning_data$Points)
summary(learning_data$gender)
modelone <- lm(learning_data$Points~learning_data$attitude)
plot(modelone)
abline(modelone)
modelone <- lm(learning_data$Points~learning_data$deep)
plot(modelone)
abline(lm(learning_data$Points~learning_data$deep))
summary(learning_data$Points)
summary(learning_data$gender)
abline(lm(learning_data$Points~learning_data$deep))
plot2 <- ggplot(learning_data, aes(attitude, deep, col = gender))
plot2 <- plot2 + geom_point()
plot2
summary(learning_data$attitude)
summary(learning_data$deep)
#Shows the relationship between attitude and age parameters. The results can also been seen from the summary of both variables.
plot3 <- ggplot(learning_data, aes(x = Age, y = stra, col = gender))
plot3 <- plot3 + geom_point()
plot3
summary(learning_data$Points)
summary(learning_data$stra)
summary(learning_data$Points)
summary(learning_data$gender)
abline(lm(learning_data$Points~learning_data$deep))
plot(abline)
#Question 3
plot()
plot(abline(lm(learning_data$Points~learning_data$deep)))
lm1 <- lm(learning_data$Points~learning_data$deep)
plot(lm1)
plot2 <- ggplot(learning_data, aes(attitude, deep, col = gender))
plot2 <- plot2 + geom_point()  stat_smooth(method = lm)
plot2
plot2 <- plot2 + geom_point()  +stat_smooth(method = lm)
plot2
# creating a plot and trying to find the dependencies of points and attitude
#There is a linear relationship between these two attributes.
plot1 <- ggplot(learning_data, aes(x = attitude, y = Points, col=gender))
plot1 <- plot1 + geom_point()
plot1
plot1 <- plot1 + geom_point() +stat_smooth(method = lm)
plot1
lm1 <- lm(learning_data$Points~learning_data$deep)
lm1 <- lm(learning_data$Points~learning_data$deep)
plot4 <- ggplot(lm1, aes(Points, deep, col = gender))
plot4 <- plot4 + geom_point()  +stat_smooth(method = lm)
plot4
summary(lm1)
with(learning_data,plot(Points, deep))
abline(lm1)
lm1 <- lm(learning_data$Points~learning_data$deep, data = learning_data)
summary(lm1)
with(learning_data,plot(Points, deep))
abline(lm1)
with(learning_data,plot(deep, Points))
abline(lm1)
lm2 <- lm(learning_data$Points~learning_data$attitude, data = learning_data)
summary(lm2)
with(learning_data,plot(attitude, Points))
abline(lm2)
lm1 <- lm(learning_data$Points~learning_data$deep, data = learning_data)
summary(lm1)
with(learning_data,plot(deep, Points))
abline(lm1)
#Fitting the model on Points for attitude variable
lm2 <- lm(learning_data$Points~learning_data$attitude, data = learning_data)
summary(lm2)
with(learning_data,plot(attitude, Points))
abline(lm2)
lm3 <- lm(learning_data$Points~learning_data$age, data = learning_data)
summary(lm3)
lm3 <- lm(learning_data$Points~learning_data$Age, data = learning_data)
summary(lm3)
with(learning_data,plot(Age, Points))
abline(lm3)
lm3 <- lm(learning_data$Points~learning_data$surf, data = learning_data)
summary(lm3)
with(learning_data,plot(surf, Points))
abline(lm3)
library(ggplot2)
#Trying to find out the correaltion between different variables.
pairs(learning_data)
# creating a plot and trying to find the dependencies of points and attitude
#There is a linear relationship between these two attributes.
plot1 <- ggplot(learning_data, aes(x = attitude, y = Points, col=gender))
plot1 <- plot1 + geom_point() +stat_smooth(method = lm)
plot1
plot2 <- ggplot(learning_data, aes(attitude, deep, col = gender))
plot2 <- plot2 + geom_point()  +stat_smooth(method = lm)
plot2
summary(learning_data$attitude)
summary(learning_data$deep)
#Shows the relationship between attitude and age parameters. The results can also been seen from the summary of both variables.
plot3 <- ggplot(learning_data, aes(x = Age, y = stra, col = gender))
plot3 <- plot3 + geom_point()
plot3
plot3 <- plot3 + geom_point() + stat_smooth(method=lm)
plot3
plot2 <- ggplot(learning_data, aes(attitude, deep, col = gender))
plot2 <- plot2 + geom_point()  +stat_smooth(method = lm)
plot2
#Shows the relationship between attitude and age parameters. The results can also been seen from the summary of both variables.
plot3 <- ggplot(learning_data, aes(x = Age, y = stra, col = gender))
plot3 <- plot3 + geom_point() + stat_smooth(method=lm)
plot3
summary(learning_data$Points)
summary(learning_data$gender)
lm1 <- lm(learning_data$Points~learning_data$deep, data = learning_data)
summary(lm1)
with(learning_data,plot(deep, Points))
abline(lm1)
#Fitting the model on Points for attitude variable
lm2 <- lm(learning_data$Points~learning_data$attitude, data = learning_data)
summary(lm2)
with(learning_data,plot(attitude, Points))
abline(lm2)
lm3 <- lm(learning_data$Points~learning_data$surf, data = learning_data)
summary(lm3)
with(learning_data,plot(surf, Points))
abline(lm3)
lm4 <- lm(learning_data$Points ~ learning_data$deep + learning_data$surf + learning_data$stra)
summary(lm4)
with(learning_data, plot(deep, Points))
abline(lm4)
with(learning_data, plot(deep+surf, Points))
abline(lm4)
with(learning_data, plot(deep+surf+stra, Points))
abline(lm4)
with(learning_data, plot(deep+surf+stra+attitude, Points))
lm4 <- lm(learning_data$Points ~ learning_data$deep + learning_data$surf + learning_data$stra + learning_data$attitude)
summary(lm4)
with(learning_data, plot(deep+surf+stra+attitude, Points))
abline(lm4)
with(learning_data, plot(deep,surf+stra+attitude, Points))
abline(lm4)
with(learning_data, autoplot(deep,surf+stra+attitude, Points))
abline(lm4)
with(learning_data, autoplot(deep+surf+stra+attitude, Points))
with(learning_data, plot(deep+surf+stra+attitude, Points))
abline(lm4)
with(learning_data, plot(deep+surf+stra, Points))
abline(lm4)
lm4 <- lm(learning_data$Points ~ learning_data$deep + learning_data$surf + learning_data$stra)
summary(lm4)
with(learning_data, plot(deep+surf+stra, Points))
abline(lm4)
p1 <- autoplot(lm1, which = 2, size = 3, smooth.linetype = "blank") + ggtitle("Reasonable")
model1 <- lm(learning_data$Points, learning_data$deep)
model1 <- lm(learning_data$Points ~ learning_data$deep)
p1 <- autoplot(model1, which = 2, size = 3, smooth.linetype = "blank") + ggtitle("Reasonable")
abline(lm4)
model1 <- lm(learning_data$Points ~ learning_data$deep)
p1 <- autoplot(model1, which = 2, size = 3, smooth.linetype = "blank") + ggtitle("Reasonable")
p1
p1 <- autoplot(model1, which = 2, size = 3, smooth.linetype = "blank") + ggtitle("Reasonable")
library(ggplot2)
#Trying to find out the correaltion between different variables.
pairs(learning_data)
# creating a plot and trying to find the dependencies of points and attitude
#There is a linear relationship between these two attributes.
plot1 <- ggplot(learning_data, aes(x = attitude, y = Points, col=gender))
plot1 <- plot1 + geom_point() +stat_smooth(method = lm)
plot1
plot2 <- ggplot(learning_data, aes(attitude, deep, col = gender))
plot2 <- plot2 + geom_point()  +stat_smooth(method = lm)
plot2
summary(learning_data$attitude)
summary(learning_data$deep)
#Shows the relationship between attitude and age parameters. The results can also been seen from the summary of both variables.
plot3 <- ggplot(learning_data, aes(x = Age, y = stra, col = gender))
plot3 <- plot3 + geom_point() + stat_smooth(method=lm)
plot3
summary(learning_data$Points)
summary(learning_data$stra)
summary(learning_data$Points)
summary(learning_data$gender)
lm1 <- lm(learning_data$Points~learning_data$deep, data = learning_data)
summary(lm1)
with(learning_data,plot(deep, Points))
abline(lm1)
#Fitting the model on Points for attitude variable
lm2 <- lm(learning_data$Points~learning_data$attitude, data = learning_data)
summary(lm2)
with(learning_data,plot(attitude, Points))
abline(lm2)
lm3 <- lm(learning_data$Points~learning_data$surf, data = learning_data)
summary(lm3)
with(learning_data,plot(surf, Points))
abline(lm3)
lm4 <- lm(learning_data$Points ~ learning_data$deep + learning_data$surf + learning_data$stra)
summary(lm4)
with(learning_data, plot(deep+surf+stra, Points))
abline(lm4)
model1 <- lm(learning_data$Points ~ learning_data$deep)
p1 <- autoplot(model1, which = 2, size = 3, smooth.linetype = "blank") + ggtitle("Reasonable")
mod1 <- lm(learning_data$Points ~ learning_data$deep)
p1 <- autoplot(mod1, which = 2, size = 3, smooth.linetype = "blank") + ggtitle("Reasonable")
p1 <- autoplot(mod1, which = 2, size = 3, smooth.linetype = "blank") + ggtitle("Reasonable")
model1 <- lm(learning_data$Points~learning_data$deep)
p1 <- autoplot(model1, which = 2, size = 3, smooth.linetype = "blank") + ggtitle("Reasonable")
p1
library(ggfortify)
mod1 <- lm(learning_data$Points ~ learning_data$deep)
p1 <- autoplot(mod1, which = 2, size = 3, smooth.linetype = "blank") + ggtitle("Reasonable")
p1
p1 <- autoplot(mod1, which = 1, size = 3, smooth.linetype = "blank") + ggtitle("Reasonable")
p1
p1 <- autoplot(mod1, which = 2, size = 3, smooth.linetype = "blank") + ggtitle("Residuals vs Fitter Values")
p2
p2 <- autoplot(mod1, which = 2, size = 3, smooth.linetype = "blank") + ggtitle("Residuals vs Fitter Values")
p2
p2 <- autoplot(mod1, which = 3, size = 3, smooth.linetype = "blank") + ggtitle("Residuals vs Fitter Values")
p2
lm_fit <- lm(attitude~points, data = learning2014)
lm_fit <- lm(attitude~points, data = learning_data)
lm_fit <- lm(attitude~Points, data = learning_data)
autoplot(lm_fit, which = c(1,2,5), smooth.linetype = "blank")
mod1 <- lm(learning_data$Points ~ learning_data$deep)
p1 <- autoplot(mod1, which = 1, size = 3, smooth.linetype = "blank") + ggtitle("Residuals vs Fitter Values")
p1
p1 <- autoplot(mod1, which = 1, size = 3, smooth.linetype = "blank") + ggtitle("Residuals vs Fitted Values")
p1
lm_fit <- lm(attitude~Points, data = learning_data)
autoplot(lm_fit, which = c(1,2,5), smooth.linetype = "blank")
lm_fit <- lm(Points~attitude, data = learning_data)
autoplot(lm_fit, which = c(1,2,5), smooth.linetype = "blank")
#Question 5
mod1 <- lm(learning_data$Points ~ learning_data$deep)
autoplot(mod1, which = 1, size = 3, smooth.linetype = "blank") + ggtitle("Residuals vs Fitted Values")
autoplot(mod1, which = 2, size = 3, smooth.linetype = "blank") + ggtitle("Residuals vs Fitted Values")
lm_fit <- lm(Points~attitude, data = learning_data)
autoplot(mod1, which = 5, size = 3, smooth.linetype = "blank") + ggtitle("Residuals vs Fitted Values")
lm_fit <- lm(Points~attitude, data = learning_data)
autoplot(lm_fit, which = c(1,2,5), smooth.linetype = "blank")
#Question 5
mod1 <- lm(learning_data$Points ~ learning_data$attitude)
autoplot(mod1, which = 1, size = 3, smooth.linetype = "blank") + ggtitle("Residuals vs Fitted Values")
mod2 <- lm(learning_data$Points ~ learning_data$deep)
autoplot(mod2, which = 2, size = 3, smooth.linetype = "blank") + ggtitle("Residuals vs Fitted Values")
mod3 <- lm(learning_data$Points ~ learning_data$deep)
autoplot(mod3, which = 5, size = 3, smooth.linetype = "blank") + ggtitle("Residuals vs Fitted Values")
lm_fit <- lm(Points~attitude, data = learning_data)
autoplot(lm_fit, which = c(1,2,5), smooth.linetype = "blank")
autoplot(mod1, which = 1, size = 3, smooth.linetype = "blank") + ggtitle("Residuals vs Fitted Values")
mod2 <- lm(learning_data$Points ~ learning_data$deep)
autoplot(mod2, which = 2, size = 3, smooth.linetype = "blank") + ggtitle("Normal Q-Q Plot")
mod3 <- lm(learning_data$Points ~ learning_data$deep)
autoplot(mod3, which = 5, size = 3, smooth.linetype = "blank") + ggtitle("Residuals vs Leverage")
lm_fit <- lm(Points~attitude, data = learning_data)
autoplot(lm_fit, which = c(1,2,5), smooth.linetype = "blank")
lm_fit <- lm(learning_data$Points~learning_data$attitude, data = learning_data)
autoplot(lm_fit, which = c(1,2,5), smooth.linetype = "blank")
mod3 <- lm(learning_data$Points ~ learning_data$attitude)
autoplot(mod3, which = 5, size = 3, smooth.linetype = "blank") + ggtitle("Residuals vs Leverage")
lm_fit <- lm(learning_data$Points~learning_data$attitude, data = learning_data)
autoplot(lm_fit, which = c(1,2,5), smooth.linetype = "blank")
