#creating a new variable 'surf'
surf <- su_lp + su_um + su_sb
#creating a new variable 'stra'
stra <- st_os + st_tm
ep_questions))
learning2014_new$deep <- rowMeans(deep)
learning2014_new$deep <- rowMeans(deep)
learning2014_new$deep
learning2014$deep <- d_sm + d_ri + d_ue
# select the columns related to deep learning and create column 'deep' by averaging
deep <- select(learning2014, one_of(deep))
# select the columns related to deep learning and create column 'deep' by averaging
deep <- select(learning2014, one_of(learning2014$deep))
library(dplyr)
# select the columns related to deep learning and create column 'deep' by averaging
deep <- select(learning2014, one_of(learning2014$deep))
learning2014$deep <- d_sm + d_ri + d_ue
learning2014$deep
#Creating a new variable 'deep'
deep <- d_sm + d_ri + d_ue
# select the columns related to deep learning and create column 'deep' by averaging
deep_c <- select(learning2014, one_of(deep))
deep <- rowMeans(d_sm + d_ri + d_ue)
#Creating a new variable 'deep'
deep <- (d_sm + d_ri + d_ue)
deep
rowMeans((deep))
#Creating a new variable 'deep'
deep <- c(d_sm,  d_ri , d_ue)
deep
#Creating a new variable 'deep'
deep <- (d_sm +  d_ri + d_ue)
deep
# questions related to deep, surface and strategic learning
deep_questions <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30","D06",  "D15", "D23", "D31")
surface_questions <- c("SU02","SU10","SU18","SU26", "SU05","SU13","SU21","SU29","SU08","SU16","SU24","SU32")
strategic_questions <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")
# select the columns related to deep learning and create column 'deep' by averaging
deep_columns <- select(lrn14, one_of(deep_questions))
lrn14$deep <- rowMeans(deep_columns)
# select the columns related to surface learning and create column 'surf' by averaging
surface_columns <- select(lrn14, one_of(surface_questions))
lrn14$surf <- rowMeans(surface_columns)
# select the columns related to strategic learning and create column 'stra' by averaging
strategic_columns <- select(lrn14, one_of(strategic_questions))
lrn14$stra <- rowMeans(strategic_columns)
# Access the dplyr library
library(dplyr)
# questions related to deep, surface and strategic learning
deep_questions <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30","D06",  "D15", "D23", "D31")
surface_questions <- c("SU02","SU10","SU18","SU26", "SU05","SU13","SU21","SU29","SU08","SU16","SU24","SU32")
strategic_questions <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")
# select the columns related to deep learning and create column 'deep' by averaging
deep_columns <- select(learning2014, one_of(deep_questions))
learning2014$deep <- rowMeans(deep_columns)
# select the columns related to surface learning and create column 'surf' by averaging
surface_columns <- select(learning2014, one_of(surface_questions))
learning2014$surf <- rowMeans(surface_columns)
# select the columns related to strategic learning and create column 'stra' by averaging
strategic_columns <- select(learning2014, one_of(strategic_questions))
learning2014$stra <- rowMeans(strategic_columns)
learning2014$deep
# questions related to deep, surface and strategic learning
deep_questions <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30","D06",  "D15", "D23", "D31")
surface_questions <- c("SU02","SU10","SU18","SU26", "SU05","SU13","SU21","SU29","SU08","SU16","SU24","SU32")
strategic_questions <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")
library(dplyr)
# creating a deep column
deep_columns <- select(learning2014, one_of(deep_questions))
learning2014$deep <- rowMeans(deep_columns)
# creating a surf column
surface_columns <- select(learning2014, one_of(surface_questions))
learning2014$surf <- rowMeans(surface_columns)
# creating a stra column
strategic_columns <- select(learning2014, one_of(strategic_questions))
learning2014$stra <- rowMeans(strategic_columns)
columns <- c("gender","Age","attitude", "deep", "stra", "surf", "Points")
learning2014_new <- select(learning2014, one_of(columns))
# see the stucture of the new dataset
str(learning2014_new)
learning
learning2014_new <- filter(learning2014_new, points>0)
learning2014_new <- filter(learning2014_new, Points>0)
dim(learning2014_new)
learning2014 <- read.csv('http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt', sep="\t")
head(learning2014)
str(learning2014)
#Finding the dimensions of the data
dim(learning2014)
deep_questions <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30","D06",  "D15", "D23", "D31")
surface_questions <- c("SU02","SU10","SU18","SU26", "SU05","SU13","SU21","SU29","SU08","SU16","SU24","SU32")
strategic_questions <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")
library(dplyr)
library(dplyr)
# creating a deep column
deep_columns <- select(learning2014, one_of(deep_questions))
learning2014$deep <- rowMeans(deep_columns)
# creating a surf column
surface_columns <- select(learning2014, one_of(surface_questions))
learning2014$surf <- rowMeans(surface_columns)
# creating a stra column
strategic_columns <- select(learning2014, one_of(strategic_questions))
learning2014$stra <- rowMeans(strategic_columns)
columns <- c("gender","Age","attitude", "deep", "stra", "surf", "Points")
learning2014_new <- select(learning2014, one_of(columns))
learning2014_new <- filter(learning2014_new, Points>0)
learning2014$attitude <- learning2014$Attitude/10
columns <- c("gender","Age","attitude", "deep", "stra", "surf", "Points")
learning2014_new <- select(learning2014, one_of(columns))
learning2014_new <- filter(learning2014_new, Points>0)
learning2014_new
dim(learning2014_new)
str(learning2014_new)
write.csv("C:\Users\Zafar\Documents\GitHub\IODS-project\data\learning2014.csv")
write.csv('C:\Users\Zafar\Documents\GitHub\IODS-project\data\learning2014.csv')
write.csv('C:/Users/Zafar/Documents/GitHub/IODS-project/data/learning2014.csv')
write.csv('C:/Users/Zafar/Documents/GitHub/IODS-project/data/learning2014.csv')
write.csv('C:/Users/Zafar/Documents/GitHub/IODS-project/data/learning2014.csv', sep=",")
write.csv(Data, 'C:/Users/Zafar/Documents/GitHub/IODS-project/data/learning2014.csv')
write.csv(learning2014_new, 'C:/Users/Zafar/Documents/GitHub/IODS-project/data/learning2014.csv')
write.table(learning2014_new, 'C:/Users/Zafar/Documents/GitHub/IODS-project/data/learning2014.txt')
(WD <- getwd())
#Now setting the working directory to IODS folder
setwd('C:\Users\Zafar\Documents\GitHub\IODS-project')
#Now setting the working directory to IODS folder
setwd('C:/Users/Zafar/Documents/GitHub/IODS-project')
#Finding the working directory of my file
(WD <- getwd())
data_read <- read.csv('C:/Users/Zafar/Documents/GitHub/IODS-project/data/learning2014.csv', sep="\t")
head(data_read)
str(data_read)
write.csv(learning2014_new, 'C:/Users/Zafar/Documents/GitHub/IODS-project/data/learning2014.csv', sep="\t")
write.csv(learning2014_new, 'C:/Users/Zafar/Documents/GitHub/IODS-project/data/learning2014.csv', sep=",")
write.csv(learning2014_new, 'C:/Users/Zafar/Documents/GitHub/IODS-project/data/learning2014.csv')
data_read <- read.csv('C:/Users/Zafar/Documents/GitHub/IODS-project/data/learning2014.csv', sep="\t")
head(data_read)
str(data_read)
data_read <- read.csv('C:/Users/Zafar/Documents/GitHub/IODS-project/data/learning2014.csv')
str(data_read)
str(data_read.drop(X))
str(data_read.drop(index))
data_read <- read.csv('C:/Users/Zafar/Documents/GitHub/IODS-project/data/learning2014.csv', row.names=FALSE)
data_read <- read.csv('C:/Users/Zafar/Documents/GitHub/IODS-project/data/learning2014.csv', rownames=FALSE)
write.csv(learning2014_new, 'C:/Users/Zafar/Documents/GitHub/IODS-project/data/learning2014.csv', row.names=FALSE)
data_read <- read.csv('C:/Users/Zafar/Documents/GitHub/IODS-project/data/learning2014.csv')
str(data_read)
#Reading the csv file and making sure that the structure is same as expected with 166 observations and 7 variables
data_read <- read.csv('C:/Users/Zafar/Documents/GitHub/IODS-project/data/learning2014.csv', sep=",")
str(data_read)
head(data_read)
data_read <- read.csv('C:/Users/Zafar/Documents/GitHub/IODS-project/data/learning2014.csv', sep=",")
head(data_read)
str(data_read)
head(learning_data)
learning_data <- read.csv('C:/Users/Zafar/Documents/GitHub/IODS-project/data/learning2014.csv', sep=",")
head(learning_data)
str(learning_data)
dime(learning_data)
dim(learning_data)
library(ggplot2)
library(ggplot2)
# initialize plot with data and aesthetic mapping
plot1 <- ggplot(learning_data, aes(x = attitude, y = points, col=gender))
plot1
# define the visualization type (points)
p2 <- plot1 + geom_point()
p2
# initialize plot with data and aesthetic mapping
plot1 <- ggplot(learning_data, aes(x = attitude, y = Points, col=gender))
plot1
plot1 <- plot1 + geom_point()
plot1
# initialize plot with data and aesthetic mapping
plot1 <- ggplot(learning_data, aes(x = attitude, y = Points, col=gender))
#plot1 <- plot1 + geom_point()
plot1
plot1 <- plot1 + geom_point()
plot1
# creating a plot and trying to find the dependencies of points and attitude
plot1 <- ggplot(learning_data, aes(x = attitude, y = Points))
plot1 <- plot1 + geom_point()
plot1
# creating a plot and trying to find the dependencies of points and attitude
plot1 <- ggplot(learning_data, aes(x = attitude, y = Points, col=gender))
plot1 <- plot1 + geom_point()
plot1
pairs(learning_data)
#Trying to find out the correaltion between different variables.
pairs(learning_data)
# creating a plot and trying to find the dependencies of points and attitude
plot1 <- ggplot(learning_data, aes(x = attitude, y = Points, col=gender))
plot1 <- plot1 + geom_point()
plot1
plot(deep, points)
hist(deep, points)
hist(deep)
hist(deep)
hist(Points)
hist(Points)
hist(learning_data$Points)
hist(learning_data$Points, learning_data$gender)
qplot(learning_data$gender)
qplot(learning_data$attitude)
qplot(learning_data$attitude, learning_data$Points)
plot2 <- qplot(learning_data$attitude, learning_data$Points)
plot2
plot2 <- qplot(learning_data$attitude, learning_data$Points, xlabel = "Attitude")
plot2
plot2 <- qplot(x = learning_data$attitude, y = learning_data$Points, xlabel = "Attitude")
plot2
plot2 <- qplot(x = learning_data$attitude, y = learning_data$Points, xlab = "Attitude")
plot2
plot2 <- qplot(x = learning_data$attitude, y = learning_data$Points, xlab = "Attitude", ylab = "Points")
plot2
plot2 <- qplot(x = learning_data$attitude, y = learning_data$gender, xlab = "Attitude", ylab = "Points")
plot2
plot2 <- qplot(x = learning_data$attitude, y = learning_data$deep, xlab = "Attitude", ylab = "Points")
plot2
plot2 <- qplot(learning_data$attitude, learning_data$deep, xlab = "Attitude", ylab = "Points")
plot2
summary(learning_data$deep)
summary(learning_data$attitude)
summary(learning_data$deep)
head(learning_data)
#Shows the relationship between attitude and age parameters. The results can also been seen from the summary of both variables.
plot2 <- qplot(learning_data$attitude, learning_data$age, xlab = "Attitude", ylab = "Points")
#Shows the relationship between attitude and age parameters. The results can also been seen from the summary of both variables.
plot3 <- qplot(learning_data$attitude, learning_data$age, xlab = "Attitude", ylab = "Points")
plot3
#Shows the relationship between attitude and age parameters. The results can also been seen from the summary of both variables.
plot3 <- qplot(learning_data, aes(x = attitude, y = age, xlab = "Attitude", ylab = "Age")
#Shows the relationship between attitude and age parameters. The results can also been seen from the summary of both variables.
plot3 <- qplot(learning_data, aes(x = attitude, y = age, xlab = "Attitude", ylab = "Age")
#Shows the relationship between attitude and age parameters. The results can also been seen from the summary of both variables.
plot3 <- qplot(learning_data, aes(x = attitude, y = age, xlab = "Attitude", ylab = "Age"))
plot3
#Shows the relationship between attitude and age parameters. The results can also been seen from the summary of both variables.
plot3 <- ggplot(learning_data, aes(x = attitude, y = age, xlab = "Attitude", ylab = "Age"))
plot3
#Shows the relationship between attitude and age parameters. The results can also been seen from the summary of both variables.
plot3 <- ggplot(learning_data, aes(x = attitude, y = Age, xlab = "Attitude", ylab = "Age"))
plot3
#Shows the relationship between attitude and age parameters. The results can also been seen from the summary of both variables.
plot3 <- qplot(learning_data, aes(x = attitude, y = Age, xlab = "Attitude", ylab = "Age"))
plot3
plot3 <- plot3 + geom_point()
plot3
#Shows the relationship between attitude and age parameters. The results can also been seen from the summary of both variables.
plot3 <- ggplot(learning_data, aes(x = Points, y = Age, xlab = "Attitude", ylab = "Age"))
plot3 <- plot3 + geom_point()
plot3
#Shows the relationship between attitude and age parameters. The results can also been seen from the summary of both variables.
plot3 <- ggplot(learning_data, aes(x = Points, y = Age, xlab = "Points", ylab = "Age"))
#Shows the relationship between attitude and age parameters. The results can also been seen from the summary of both variables.
plot3 <- ggplot(learning_data, aes(x = Points, y = Age))
plot3 <- plot3 + geom_point()
plot3
summary(learning_data$Points)
summary(learning_data$Age)
#Shows the relationship between attitude and age parameters. The results can also been seen from the summary of both variables.
plot3 <- ggplot(learning_data, aes(x = Points, y = Age, col = gender))
plot3 <- plot3 + geom_point()
plot3
#Shows the relationship between attitude and deep learning parameters. The results can also been seen from the summary of both variables.
plot2 <- qplot(learning_data$attitude, learning_data$deep, xlab = "Attitude", ylab = "Points", col = gender)
plot2
#Shows the relationship between attitude and deep learning parameters. The results can also been seen from the summary of both variables.
plot2 <- ggplot(learning_data$attitude, learning_data$deep, xlab = "Attitude", ylab = "Points", col = gender)
#Shows the relationship between attitude and deep learning parameters. The results can also been seen from the summary of both variables.
plot2 <- ggplot(learning_data, aes(attitude, Points), xlab = "Attitude", ylab = "Points", col = gender)
plot2
summary(learning_data$attitude)
#Shows the relationship between attitude and deep learning parameters. The results can also been seen from the summary of both variables.
plot2 <- ggplot(learning_data, aes(attitude, Points), xlab = "Attitude", ylab = "Points", col = gender)
plot2 <- plots + geom_abline()
plot2 <- plot2 + geom_abline()
plot2
plot2 <- plot2 + geom_point()
plot2
#Shows the relationship between attitude and deep learning parameters. The results can also been seen from the summary of both variables.
plot2 <- ggplot(learning_data, aes(attitude, Points), xlab = "Attitude", ylab = "Points", col = gender)
plot2 <- plot2 + geom_point()
plot2
#Shows the relationship between attitude and deep learning parameters. The results can also been seen from the summary of both variables.
plot2 <- ggplot(learning_data, aes(attitude, Points, xlab = "Attitude", ylab = "Points", col = gender))
plot2 <- plot2 + geom_point()
plot2
#Shows the relationship between attitude and deep learning parameters. The results can also been seen from the summary of both variables.
plot2 <- ggplot(learning_data, aes(attitude, gender, col = gender))
plot2 <- plot2 + geom_point()
plot2
#Shows the relationship between attitude and deep learning parameters. The results can also been seen from the summary of both variables.
plot2 <- ggplot(learning_data, aes(attitude, deep, col = gender))
plot2 <- plot2 + geom_point()
plot2
# creating a plot and trying to find the dependencies of points and attitude
plot1 <- ggplot(learning_data, aes(x = attitude, y = Points, col=gender))
plot1 <- plot1 + geom_point()
plot1
# creating a plot and trying to find the dependencies of points and attitude
#There is a linear relationship between these two attributes.
plot1 <- ggplot(learning_data, aes(x = attitude, y = Points, col=gender))
plot1 <- plot1 + geom_point()
plot1
plot2 <- ggplot(learning_data, aes(attitude, deep, col = gender))
plot2 <- plot2 + geom_point()
plot2
summary(learning_data$attitude)
summary(learning_data$deep)
#Shows the relationship between attitude and age parameters. The results can also been seen from the summary of both variables.
plot3 <- ggplot(learning_data, aes(x = Points, y = Age, col = gender))
plot3 <- plot3 + geom_point()
plot3
#Shows the relationship between attitude and age parameters. The results can also been seen from the summary of both variables.
plot3 <- ggplot(learning_data, aes(x = Age, y = Points, col = gender))
plot3 <- plot3 + geom_point()
plot3
#Shows the relationship between attitude and age parameters. The results can also been seen from the summary of both variables.
plot3 <- ggplot(learning_data, aes(x = Age, y = deep, col = gender))
plot3 <- plot3 + geom_point()
plot3
#Shows the relationship between attitude and age parameters. The results can also been seen from the summary of both variables.
plot3 <- ggplot(learning_data, aes(x = Age, y = surf, col = gender))
plot3 <- plot3 + geom_point()
plot3
#Shows the relationship between attitude and age parameters. The results can also been seen from the summary of both variables.
plot3 <- ggplot(learning_data, aes(x = Age, y = stra, col = gender))
plot3 <- plot3 + geom_point()
plot3
#Shows the relationship between attitude and age parameters. The results can also been seen from the summary of both variables.
plot3 <- ggplot(learning_data, aes(x = Age, y = gender, col = gender))
plot3 <- plot3 + geom_point()
plot3
#Shows the relationship between attitude and age parameters. The results can also been seen from the summary of both variables.
plot3 <- ggplot(learning_data, aes(x = Age, y = stra, col = gender))
plot3 <- plot3 + geom_point()
plot3
summary(learning_data$Points)
summary(learning_data$gender)
model <- lm(points ~ attitude)
model <- lm(formula = points ~ learning_data)
model <- lm(Points ~ attitude)
model <- lm(learning_data$Points ~ attitude)
model <- lm(learning_data$Points ~ learning_data$attitude)
Points <- transform(Points, Fitted = fitted(model))
Points <- transform(learning_data$Points, Fitted = fitted(model))
Points
colnames(Points)[1] <- "Points"
ggplot(Points, aes(attitude, Points)) +
geom_point(col = "red") +
geom_smooth(method = "lm", se = F) +
theme(axis.ticks = element_blank(), axis.text = element_blank()) +
geom_segment(aes(x = attitude, y = Points,
xend = x, yend = Fitted))
ggplot(Points, aes(attitude, Points)) +
geom_point(col = "red") +
geom_smooth(method = "lm", se = F) +
theme(axis.ticks = element_blank(), axis.text = element_blank()) +
geom_segment(aes(x = attitude , y = Points,
xend = attitude, yend = Fitted))
model <- lm(learning_data$Points ~ learning_data$attitude)
Points <- transform(learning_data$Points, Fitted = fitted(model))
colnames(Points)[1] <- "Points"
ggplot(Points, aes(attitude, Points)) +
geom_point(col = "red") +
geom_smooth(method = "lm", se = F) +
theme(axis.ticks = element_blank(), axis.text = element_blank()) +
geom_segment(aes(x = attitude , y = Points,
xend = attitude, yend = Fitted))
model <- lm(learning_data$Points ~ learning_data$attitude,learning_data$deep, learning_data$stra )
model <- lm(learning_data$Points ~ learning_data$attitude + learning_data$deep + learning_data$stra )
Points <- transform(learning_data$Points, Fitted = fitted(model))
colnames(Points)[1] <- "Points"
ggplot(Points, aes(attitude, Points)) +
geom_point(col = "red") +
geom_smooth(method = "lm", se = F) +
theme(axis.ticks = element_blank(), axis.text = element_blank()) +
geom_segment(aes(x = attitude , y = Points,
xend = attitude, yend = Fitted))
model <- lm(learning_data$Points ~ learning_data$attitude + learning_data$deep + learning_data$stra )
Points <- transform(learning_data$Points, Fitted = fitted(model))
plot(Points)
#{r, fig.align = "center", fig.width = 14, fig.height = 8}
library(ggfortify)
lm_fit <- lm(attitude~Points, data = learning_data)
autoplot(lm_fit, which = c(1,2,5), smooth.linetype = "blank")
#{r, fig.align = "center", fig.width = 14, fig.height = 8}
library(ggfortify)
install.packages("ggfortify")
#{r, fig.align = "center", fig.width = 14, fig.height = 8}
library(ggfortify)
lm_fit <- lm(attitude~Points, data = learning_data)
autoplot(lm_fit, which = c(1,2,5), smooth.linetype = "blank")
#{r, fig.align = "center", fig.width = 14, fig.height = 8}
library(ggfortify)
lm_fit <- lm(attitude~Points, data = learning_data)
autoplot(lm_fit, which = c(1,2,5), smooth.linetype = "blank")
model <- lm(learning_data$Points ~ learning_data$attitude + learning_data$deep + learning_data$stra )
Points <- transform(learning_data$Points, Fitted = fitted(model))
plot(Points)
model <- lm(learning_data$Points ~ learning_data$attitude + learning_data$deep + learning_data$stra )
fitted_model <- transform(learning_data$Points, Fitted = fitted(model))
plot(fitted_model)
library(ggfortify)
plot(attitude, fitted_model)
model <- lm(learning_data$Points ~ learning_data$attitude + learning_data$deep + learning_data$stra )
fitted_model <- transform(learning_data$Points, Fitted = fitted(model))
plot(attitude, fitted_model)
model <- lm(learning_data$Points ~ learning_data$attitude + learning_data$deep + learning_data$stra )
fitted_model <- transform(learning_data$Points, Fitted = fitted(model))
plot(attitude, fitted_model)
lm1 <- lm(learning_data$Points~learning_data$attitude)
p1 <- autoplot(lm1, which = 2, size = 3, smooth.linetype = "blank") + ggtitle("Reasonable")
p1
p1 <- autoplot(lm1, which = 1, size = 3, smooth.linetype = "blank") + ggtitle("Reasonable")
p1
p2 <- autoplot(lm1, which = 2, size = 3, smooth.linetype = "blank") + ggtitle("Reasonable")
p1
p2
p1
p2
plot(p1)
p1 <- autoplot(lm1, which = 1, size = 3, smooth.linetype = "blank") + ggtitle("Reasonable")
p1
p2 <- autoplot(lm1, which = 2, size = 3, smooth.linetype = "blank") + ggtitle("Reasonable")
p2
p3 <- autoplot(lm1, which = 3, size = 3, smooth.linetype = "blank") + ggtitle("Reasonable")
p3
p1 <- autoplot(lm1, which = 1, size = 3, smooth.linetype = "blank")
p1
p2 <- autoplot(lm1, which = 2, size = 3, smooth.linetype = "blank")
p2
p3 <- autoplot(lm1, which = 3, size = 3, smooth.linetype = "blank")
p3
p1 <- autoplot(lm1, which = 1, size = 3, smooth.linetype = "blank")
p1
p2 <- autoplot(lm1, which = 2, size = 3, smooth.linetype = "blank")
p2
p1 <- autoplot(lm1, which = 1, size = 3, smooth.linetype = "blank")
p1
lm1 <- lm(learning_data$Points~learning_data$deep)
p1 <- autoplot(lm1, which = 1, size = 3, smooth.linetype = "blank")
p1
p2 <- autoplot(lm1, which = 2, size = 3, smooth.linetype = "blank")
p2
p3 <- autoplot(lm1, which = 3, size = 3, smooth.linetype = "blank")
p3
p1 <- plot(lm1, which = 1, size = 3, smooth.linetype = "blank")
p1
p2 <- autoplot(lm1, which = 2, size = 3, smooth.linetype = "blank")
p2
p2 <- plot(lm1, which = 2, size = 3, smooth.linetype = "blank")
p1 <- plot(lm1, smooth.linetype = "blank")
lm1 <- lm(learning_data$Points~learning_data$attitude)
p1 <- plot(lm1, smooth.linetype = "blank")
lm1 <- lm(learning_data$Points~learning_data$attitude)
p1 <- plot(lm1, smooth.linetype = "blank")
summary(learning_data$Points)
clearPushBack()
clear
summary(learning_data$attitude)
summary(learning_data$deep)
#Shows the relationship between attitude and age parameters. The results can also been seen from the summary of both variables.
plot3 <- ggplot(learning_data, aes(x = Age, y = stra, col = gender))
plot3 <- plot3 + geom_point()
plot3
summary(learning_data$Points)
summary(learning_data$stra)
summary(learning_data$Points)
summary(learning_data$gender)
lm1 <- lm(learning_data$Points~learning_data$attitude)
lm1
p1 <- plot(lm1, smooth.linetype = "blank")
learning_data <- read.csv('C:/Users/Zafar/Documents/GitHub/IODS-project/data/learning2014.csv', sep=",")
head(learning_data)
#structure and dimensions of the data
str(learning_data)
dim(learning_data)
library(ggplot2)
#Trying to find out the correaltion between different variables.
pairs(learning_data)
# creating a plot and trying to find the dependencies of points and attitude
#There is a linear relationship between these two attributes.
plot1 <- ggplot(learning_data, aes(x = attitude, y = Points, col=gender))
plot1 <- plot1 + geom_point()
plot1
plot2 <- ggplot(learning_data, aes(attitude, deep, col = gender))
plot2 <- plot2 + geom_point()
plot2
summary(learning_data$attitude)
summary(learning_data$deep)
#Shows the relationship between attitude and age parameters. The results can also been seen from the summary of both variables.
plot3 <- ggplot(learning_data, aes(x = Age, y = stra, col = gender))
plot3 <- plot3 + geom_point()
plot3
summary(learning_data$Points)
summary(learning_data$stra)
summary(learning_data$Points)
summary(learning_data$gender)
lm1 <- lm(learning_data$Points~learning_data$attitude)
abline(lm1)
abline(lm1)
lm1 <- lm(learning_data$Points~learning_data$attitude)
lm1 <- lm(learning_data$Points~learning_data$attitude)
lm1
abline(lm1)
plot(lm1)
modelone <- lm(learning_data$Points~learning_data$attitude)
lm1
modelone <- lm(learning_data$Points~learning_data$attitude)
plot(modelone)
plot(modelone)
